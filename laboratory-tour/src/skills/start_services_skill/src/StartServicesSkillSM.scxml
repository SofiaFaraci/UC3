<scxml 
  initial="idle" 
  version="1.0" 
  name="StartServicesSkillSM"
  datamodel="cplusplus:StartServicesDataModel:StartServicesDataModel.h"
  xmlns="http://www.w3.org/2005/07/scxml">

    <state id="start_program">
        <onentry>
            <script>
                QTimer::singleShot(0, stateMachine(), [=](){
                    stateMachine()->submitEvent((start())  ? "CMD_SUCCESS" : "CMD_FAILURE");
                });      
            </script>
        </onentry>
        <transition event="CMD_SUCCESS" target="success"/>
        <transition event="CMD_FAILURE" target="failure"/>
    </state>

    <state id="failure">
        <transition event="CMD_OK" target="idle"/>
    </state>

    <state id="success">
        <transition event="CMD_OK" target="idle"/>
    </state>

    <state id="check_status">
        <onentry>
            <script>
                m_currentState = get_state();
                QTimer::singleShot(0, stateMachine(), [=](){
                    stateMachine()->submitEvent((m_currentState.value().id != lifecycle_msgs::msg::State::PRIMARY_STATE_INACTIVE)  ? "CMD_ACTIVE" : "CMD_INACTIVE");
                });           
            </script>
        </onentry>
        <transition event="CMD_ACTIVE" target="success"/>
        <transition event="CMD_INACTIVE" target="start_program"/>
    </state>

    <state id="idle">
        <transition event="CMD_START" target="check_status" />
    </state>
    
</scxml>

