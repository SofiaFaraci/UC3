<scxml version="1.0" xmlns="http://www.w3.org/2005/07/scxml" datamodel="ecmascript" name="SetCurrentPoiDoneSkillAction" initial="idle">
    <datamodel>
        <data id="poi_number" expr="0"/>
        <!-- <data id="poi_name" type="string" expr=""/> -->
        <!-- <data id="field_name" type="string" expr='"PoiDone"'/>
        <data id="field_name_init" type="string" expr='"PoiDone"'/> -->
        <data id="value" expr="1"/>
    </datamodel>
    <!-- SetCurrentPoiDoneSkill is a server for tick from the ROS2Action plugin-->
    <!-- SetCurrentPoiDoneSkill is a server for halt from the ROS2Action plugin-->
    <!-- SetCurrentPoiDoneSkill is a client for GetCurrentPoi from the SchedulerComponent -->
    <!-- SetCurrentPoiDoneSkill is a client for SetInt from the BlackboardComponent -->
    <state id="idle">
        <transition target="getCurrentPoi" event="CMD_TICK">
            <send event="SchedulerComponent.GetCurrentPoi.Call"/>
        </transition>
        <transition target="idle" event="CMD_HALT">
            <send event="HALT_RESPONSE"/>
        </transition>
    </state>
    <state id="getCurrentPoi">
        <transition cond="_event.data.is_ok" target="setInt" event="SchedulerComponent.GetCurrentPoi.Return">
            <assign location="poi_number" expr="event.data.poi_number"/>
            <!-- <assign location="poi_name" expr="_service.response.poi_name"/> -->
            <!-- <script>
                field_name = field_name_init + poi_number;
            </script> -->
            <send event="BlackboardComponent.SetInt.Call">
                <!-- <param name="field_name" expr="field_name"/> -->
                <param name="field_name" expr="poi_number"/>
                <param name="value" expr="value"/>
            </send>
        </transition>
        <transition cond="!(_event.data.is_ok)" target="idle" event="SchedulerComponent.GetCurrentPoi.Return">
            <send event="TICK_RESPONSE">
                <param name="result" expr="&quot;FAILURE&quot;"/>
            </send>
        </transition>
        <transition target="idle" event="CMD_HALT">
            <send event="HALT_RESPONSE"/>
        </transition>
    </state>
    <state id="setInt">
        <transition cond="_event.data.is_ok" target="idle" event="BlackboardComponent.SetInt.Return">
            <send event="TICK_RESPONSE">
                <param name="result" expr="&quot;SUCCESS&quot;"/>
            </send>
        </transition>
        <transition cond="!(_event.data.is_ok)" target="idle" event="BlackboardComponent.SetInt.Return">
            <send event="TICK_RESPONSE">
                <param name="result" expr="&quot;FAILURE&quot;"/>
            </send>
        </transition>
        <transition target="idle" event="CMD_HALT">
            <send event="HALT_RESPONSE"/>
        </transition>
    </state>
</scxml>
